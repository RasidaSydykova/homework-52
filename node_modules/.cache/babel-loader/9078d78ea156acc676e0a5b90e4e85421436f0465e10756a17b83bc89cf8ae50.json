{"ast":null,"code":"import Card from \"./Card\";\nclass CardDeck {\n  constructor() {\n    this.ranks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n    this.suits = ['♦', '♥', '♣', '♠'];\n    this.deck = [];\n    this.suits.forEach(suit => {\n      this.ranks.forEach(rank => {\n        const card = new Card(rank, suit);\n        this.deck.push(card);\n      });\n    });\n  }\n  getCard() {\n    const array = this.deck;\n    const random = Math.floor(Math.random() * array.length);\n    array.splice(random, 1);\n    return [array[random]];\n  }\n  getCards(howMany) {\n    const array = this.deck;\n    const os = new Set();\n    const a = [];\n    do {\n      // берем случайный номер от 0 до длины массива\n      const i = Math.trunc(Math.random() * array.length);\n      os.add(i);\n      a.push(array[i]);\n    } while (os.size < howMany);\n    return a;\n  }\n}\n;\nexport default CardDeck;","map":{"version":3,"names":["Card","CardDeck","constructor","ranks","suits","deck","forEach","suit","rank","card","push","getCard","array","random","Math","floor","length","splice","getCards","howMany","os","Set","a","i","trunc","add","size"],"sources":["/Users/rasidataalaybekovna/Desktop/projects/homework-52/src/lib/CardDeck.ts"],"sourcesContent":["import Card from \"./Card\";\n\nclass CardDeck {\n  private readonly ranks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n  private readonly suits = ['♦', '♥', '♣', '♠'];\n  public deck: Card[] = [];\n\n  constructor() {\n    this.suits.forEach(suit => {\n      this.ranks.forEach(rank => {\n        const card = new Card(rank, suit);\n        this.deck.push(card);\n      });\n    });\n  }\n\n  getCard(): Card[] {\n    const array = this.deck;\n    const random = Math.floor(Math.random() * array.length);\n    array.splice(random, 1);\n    return [array[random]];\n  };\n\n  getCards(howMany: number): Card[]  {\n    const array = this.deck;\n\n    const os = new Set()\n    const a = []\n    do {\n      // берем случайный номер от 0 до длины массива\n      const i = Math.trunc(Math.random() * array.length)\n      os.add(i)\n      a.push(array[i])\n    } while (os.size < howMany);\n    return a\n  };\n\n\n};\n\n\n\n\n\n\n\n\nexport default CardDeck;"],"mappings":"AAAA,OAAOA,IAAI,MAAM,QAAQ;AAEzB,MAAMC,QAAQ,CAAC;EAKbC,WAAWA,CAAA,EAAG;IAAA,KAJGC,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAAA,KAC1EC,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAAA,KACtCC,IAAI,GAAW,EAAE;IAGtB,IAAI,CAACD,KAAK,CAACE,OAAO,CAACC,IAAI,IAAI;MACzB,IAAI,CAACJ,KAAK,CAACG,OAAO,CAACE,IAAI,IAAI;QACzB,MAAMC,IAAI,GAAG,IAAIT,IAAI,CAACQ,IAAI,EAAED,IAAI,CAAC;QACjC,IAAI,CAACF,IAAI,CAACK,IAAI,CAACD,IAAI,CAAC;MACtB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAE,OAAOA,CAAA,EAAW;IAChB,MAAMC,KAAK,GAAG,IAAI,CAACP,IAAI;IACvB,MAAMQ,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,CAAC,CAAC,GAAGD,KAAK,CAACI,MAAM,CAAC;IACvDJ,KAAK,CAACK,MAAM,CAACJ,MAAM,EAAE,CAAC,CAAC;IACvB,OAAO,CAACD,KAAK,CAACC,MAAM,CAAC,CAAC;EACxB;EAEAK,QAAQA,CAACC,OAAe,EAAW;IACjC,MAAMP,KAAK,GAAG,IAAI,CAACP,IAAI;IAEvB,MAAMe,EAAE,GAAG,IAAIC,GAAG,CAAC,CAAC;IACpB,MAAMC,CAAC,GAAG,EAAE;IACZ,GAAG;MACD;MACA,MAAMC,CAAC,GAAGT,IAAI,CAACU,KAAK,CAACV,IAAI,CAACD,MAAM,CAAC,CAAC,GAAGD,KAAK,CAACI,MAAM,CAAC;MAClDI,EAAE,CAACK,GAAG,CAACF,CAAC,CAAC;MACTD,CAAC,CAACZ,IAAI,CAACE,KAAK,CAACW,CAAC,CAAC,CAAC;IAClB,CAAC,QAAQH,EAAE,CAACM,IAAI,GAAGP,OAAO;IAC1B,OAAOG,CAAC;EACV;AAGF;AAAC;AASD,eAAerB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}